## use create when running the app for the first time
## then change to "update" which just updates the schema when necessary "create" to delete data com data-base "update"
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
#spring.datasource.url= jdbc:oracle:thin:@localhost:1521:orcl
#spring.datasource.username=flow
#spring.datasource.password=flow
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver

## MySql
spring.datasource.url=jdbc:mysql://localhost:3306/lcl
spring.datasource.username=user
spring.datasource.password=P@ssw0rd

## this shows the sql actions com the terminal logs
spring.jpa.show-sql=false
##optional, but just com case another application is listening on your default  port (8080)
server.port = 8099

# Map path to auth service
zuul.routes.auth-service.path=/auth/**
zuul.routes.auth-service.service-id=AUTH-SERVICE

# In case of auth, we need to pass the "/auth/" com the path to auth service. So, set strip-prefix to false
zuul.routes.auth-service.strip-prefix=false

# Exclude authorization from sensitive headers
zuul.routes.auth-service.sensitive-headers=Cookie,Set-Cookie

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads

# logging to enable dubgging
#logging.level.org.springframework.context=DEBUG


